[project]
name = "batocera-configgen"
requires-python = ">= 3.12"
dynamic = ["version"]
dependencies = [
    "PyYAML==6.0.2",
    "ruamel.yaml==0.18.6",
    "toml==0.10.2",
    "pillow==11.0.0",
    "configobj==5.0.8",
    "requests==2.32.3",
    "qrcode==8.0",
    "ffmpeg-python @ git+https://github.com/kkroening/ffmpeg-python.git@df129c7ba30aaa9ffffb81a48f53aa7253b0b4e6",
]

[project.scripts]
emulatorlauncher = "configgen.emulatorlauncher:launch"

[project.optional-dependencies]
test = [
    "pytest==8.*",
    "pytest-mock==3.*",
    "pytest-lazy-fixtures==1.*",
    "pytest-cov==7.*",
    "pytest-xdist==3.*",
    "pytest-test-groups==1.*",
    "coverage[toml]==7.*",
    "pyfakefs==5.8.0",
    "syrupy==4.9.1",
    "ruff==0.13.0",
    "pyright[nodejs]==1.1.405",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.version]
source = "code"
path = "_version.py"

[tool.hatch.build.targets.wheel]
include = [
    "/configgen",
]

[tool.pyright]
extends = "../../../../../pyproject.toml"

[tool.ruff]
extend = "../../../../../pyproject.toml"

[tool.pytest.ini_options]
addopts = "--cov=configgen --cov-report=term --no-cov-on-fail"
testpaths = [
    "tests",
]

[tool.coverage.run]
branch = true

[tool.coverage.report]
precision = 2
exclude_also = [
    "raise NotImplementedError",
    "^\\s+pass$",
    "^\\s*if (?:typing\\.)?TYPE_CHECKING:",
    "^\\s*\\.\\.\\.\\s*$",
    "def .*:\\s*\\.\\.\\.\\s*$",
]
partial_branches = [
    "^\\s*if not TYPE_CHECKING:"
]
omit = [
    "configgen/types.py",
    "configgen/generators/lemonade/*",
    "configgen/generators/mame/mameTypes.py",
    "configgen/generators/ryujinx/*",
    "configgen/generators/citron/*",
    "configgen/generators/suyu/*",
]
